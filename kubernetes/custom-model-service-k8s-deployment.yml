apiVersion: apps/v1
kind: Deployment
metadata:
  name: custom-model-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: custom-model
  template:
    metadata:
      labels:
        app: custom-model
    spec:
      containers:
      - name: custom-model-container
        image: 379283424934.dkr.ecr.us-east-2.amazonaws.com/mediaviz-repository:custom-model
        imagePullPolicy: Always
        env:
          - name: INGRESS_PORT
            value: 0.0.0.0:8081
          - name: IMAIGE_PYTHON_APP_ENVIRONMENT
            value: DEV
        volumeMounts:
          - name: server-key
            mountPath: /tls_certs/k8s/server-key.pem
            subPath: server-key.pem
          - name: server-cert
            mountPath: /tls_certs/k8s/server-cert.pem
            subPath: server-cert.pem
          - name: ca-cert
            mountPath: /tls_certs/k8s/ca-cert.pem
            subPath: ca-cert.pem
          - name: client-key
            mountPath: /tls_certs/k8s/client-key.pem
            subPath: client-key.pem
          - name: client-cert
            mountPath: /tls_certs/k8s/client-cert.pem
            subPath: client-cert.pem
      volumes:
      - name: server-key
        secret:
          secretName: tls-certs
          items:
            - key: server-key.pem
              path: server-key.pem
      - name: server-cert
        secret:
          secretName: tls-certs
          items:
            - key: server-cert.pem
              path: server-cert.pem
      - name: ca-cert
        secret:
          secretName: tls-certs
          items:
            - key: ca-cert.pem
              path: ca-cert.pem
      - name: client-key
        secret:
          secretName: tls-certs
          items:
            - key: client-key.pem
              path: client-key.pem
      - name: client-cert
        secret:
          secretName: tls-certs
          items:
            - key: client-cert.pem
              path: client-cert.pem


---

apiVersion: v1
kind: Service
metadata:
  name: custom-model-service
spec:
  selector:
    app: custom-model
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8081
  type: LoadBalancer